#!/usr/bin/env python
"""
collate all extensions of the input fits files
"""

from argparse import ArgumentParser
import fitsio


def get_args():
    parser = ArgumentParser()

    parser.add_argument('-o', '--output', required=True,
                        help="output file")

    parser.add_argument('-i', '--input', nargs='+', required=True,
                        help="input files")

    return parser.parse_args()


def get_exts(args):
    """
    get extensions by name or number
    """
    with fitsio.FITS(args.input[0]) as fits:
        exts = []
        for i, hdu in enumerate(fits):
            extname = hdu.get_extname()
            if extname == '':
                exts.append(i)
            else:
                exts.append(extname)

    return exts


def cat_files(args):
    """
    concatenate (collate) all extensions
    """
    exts = get_exts(args)

    print("writing to:", args.output)

    with fitsio.FITS(args.output, 'rw', clobber=True) as fobj:
        for ext in exts:

            print('ext %s' % ext)
            if isinstance(ext, str):
                extname = ext
            else:
                extname = None

            for i, fname in enumerate(args.input):
                print('    %s' % fname)

                with fitsio.FITS(fname) as infits:

                    if not infits[ext].has_data():
                        continue

                    tmp = infits[ext].read()

                    if ext not in fobj:
                        fobj.write(tmp, extname=extname)
                    else:
                        fobj[ext].append(tmp)


def main():
    args = get_args()
    cat_files(args)


if __name__ == '__main__':
    main()
